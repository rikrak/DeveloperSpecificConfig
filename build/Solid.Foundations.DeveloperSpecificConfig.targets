<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- Adapted from http://www.diaryofaninja.com/blog/2011/09/14/using-custom-webconfig-transformations-in-msbuild -->
  <!-- this looks for files on disk that conform to 
         app.<MACHINE_NAME>.config,
         app.<USER_NAME>.config,
         web.<MACHINE_NAME>.config,
         web.<USER_NAME>.config
       
       In the case of web.config files, there needs to be a web.template.config that contains the default settings.
       The user specific config file will be applied to this as a transform.
  -->
  <PropertyGroup>
    <SolutionDir Condition=" '$(SolutionDir)' == '' Or '$(SolutionDir)' == '*Undefined*'">..\</SolutionDir>
  </PropertyGroup>

  <PropertyGroup>
    <VisualStudioVersion Condition="'$(VisualStudioVersion)' == ''">14.0</VisualStudioVersion> <!-- Defaults to VS 2015 -->
    <VSToolsPath Condition="'$(VSToolsPath)' == ''">$(MSBuildExtensionsPath)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
    <TransformXmlTask>$(VSToolsPath)\Web\Microsoft.Web.Publishing.Tasks.dll</TransformXmlTask>
  </PropertyGroup>
  <UsingTask TaskName="TransformXml" AssemblyFile="$(TransformXmlTask)" />

  <Target Name="CreateUserSpecificAppConfig" AfterTargets="AfterBuild" Condition="Exists('app.$(USERNAME).config')">
    <Message Text="OutDir = $(OutDir)"/>
    <Message Text="OutputPath = $(OutputPath)"/>
    <Copy SourceFiles="app.config" DestinationFiles="$(IntermediateOutputPath)tempapp.config" />
    <TransformXml Source="$(IntermediateOutputPath)tempapp.config" Transform="app.$(USERNAME).config" Destination="$(IntermediateOutputPath)tempapp2.config" />
    <ReadLinesFromFile File="$(IntermediateOutputPath)tempapp2.config">
      <Output TaskParameter="Lines" ItemName="TransformedConfig" />
    </ReadLinesFromFile>
    <ReadLinesFromFile File="$(OutDir)$(AssemblyName)$(TargetExt).config">
      <Output TaskParameter="Lines" ItemName="UnTransformedConfig" />
    </ReadLinesFromFile>
    <Copy Condition=" @(UnTransformedConfig) != @(TransformedConfig) " SourceFiles="$(IntermediateOutputPath)tempapp2.config" DestinationFiles="$(OutDir)$(AssemblyName)$(TargetExt).config" OverwriteReadOnlyFiles="True" />
    <Message Text="Using a Configuration file specific to user $(USERNAME) for $(AssemblyName)" />
  </Target>

  <Target Name="CreateMachineSpecificAppConfig" AfterTargets="AfterBuild" Condition="Exists('app.$(COMPUTERNAME).config') And !Exists('app.$(USERNAME).config')">
    <Message Text="OutDir = $(OutDir)"/>
    <Message Text="OutputPath = $(OutputPath)"/>
    <Message Text="IntermediatePath = $(IntermediateOutputPath)"/>

    <Copy SourceFiles="app.config" DestinationFiles="$(IntermediateOutputPath)tempapp.config" />
    <TransformXml Source="$(IntermediateOutputPath)tempapp.config" Transform="app.$(COMPUTERNAME).config" Destination="$(IntermediateOutputPath)tempapp2.config" />
    <ReadLinesFromFile File="$(IntermediateOutputPath)tempapp2.config">
      <Output TaskParameter="Lines" ItemName="TransformedConfig" />
    </ReadLinesFromFile>
    <ReadLinesFromFile File="$(OutDir)$(AssemblyName)$(TargetExt).config">
      <Output TaskParameter="Lines" ItemName="UnTransformedConfig" />
    </ReadLinesFromFile>
    <Copy Condition=" @(UnTransformedConfig) != @(TransformedConfig) " SourceFiles="$(IntermediateOutputPath)tempapp2.config" DestinationFiles="$(OutDir)$(AssemblyName)$(TargetExt).config" OverwriteReadOnlyFiles="True" />
    <Message Text="Using a Configuration file specific to machine $(COMPUTERNAME) for $(AssemblyName)" />
  </Target>

  <Target Name="CopyWebConfigFromTemplate" AfterTargets="AfterBuild" Condition="Exists('web.template.config')">
    <Copy SourceFiles="web.template.config" DestinationFiles="web.config" OverwriteReadOnlyFiles="True"/>
  </Target>

  <Target Name="CreateUserSpecificWebConfig" AfterTargets="AfterBuild" Condition="Exists('web.$(USERNAME).config')" >
    <Copy SourceFiles="web.config" DestinationFiles="$(IntermediateOutputPath)tempweb.config" />
    <TransformXml Source="$(IntermediateOutputPath)tempweb.config" Transform="web.$(USERNAME).config" Destination="$(IntermediateOutputPath)tempweb2.config" />
    <ReadLinesFromFile File="$(IntermediateOutputPath)tempweb2.config">
      <Output TaskParameter="Lines" ItemName="TransformedConfig" />
    </ReadLinesFromFile>
    <ReadLinesFromFile File="web.config">
      <Output TaskParameter="Lines" ItemName="UnTransformedConfig" />
    </ReadLinesFromFile>
    <Copy Condition=" @(UnTransformedConfig) != @(TransformedConfig) " SourceFiles="$(IntermediateOutputPath)tempweb2.config" DestinationFiles="web.config" OverwriteReadOnlyFiles="True" />
    <Message Text="Using a web.config file specific to user $(USERNAME) for $(AssemblyName)" />
  </Target>
 
  <Target Name="CreateMachineSpecificWebConfig" AfterTargets="AfterBuild" Condition="Exists('web.$(COMPUTERNAME).config') And !Exists('web.$(USERNAME).config')" >
    <Copy SourceFiles="web.config" DestinationFiles="$(IntermediateOutputPath)tempweb.config" />
    <TransformXml Source="$(IntermediateOutputPath)tempweb.config" Transform="web.$(COMPUTERNAME).config" Destination="$(IntermediateOutputPath)tempweb2.config" />
    <ReadLinesFromFile File="$(IntermediateOutputPath)tempweb2.config">
      <Output TaskParameter="Lines" ItemName="TransformedConfig" />
    </ReadLinesFromFile>
    <ReadLinesFromFile File="web.config">
      <Output TaskParameter="Lines" ItemName="UnTransformedConfig" />
    </ReadLinesFromFile>
    <Copy Condition=" @(UnTransformedConfig) != @(TransformedConfig) " SourceFiles="$(IntermediateOutputPath)tempweb2.config" DestinationFiles="web.config" OverwriteReadOnlyFiles="True" />
    <Message Text="Using a web.config file specific to machine $(COMPUTERNAME) for $(AssemblyName)" />
  </Target>
</Project>